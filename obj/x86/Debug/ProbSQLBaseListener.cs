//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Study Folder\CHBK\Cao Hoc\Master Thesis\Phan Mem\PRDB Visual Management\ProbSQLCompiler\ProbSQL.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace PRDB_Visual_Management.ProbSQLCompiler {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IProbSQLListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class ProbSQLBaseListener : IProbSQLListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] ProbSQLParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] ProbSQLParser.Where_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery([NotNull] ProbSQLParser.SubqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery([NotNull] ProbSQLParser.SubqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.subquery_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubquery_operator([NotNull] ProbSQLParser.Subquery_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.subquery_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubquery_operator([NotNull] ProbSQLParser.Subquery_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_literal([NotNull] ProbSQLParser.Boolean_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_literal([NotNull] ProbSQLParser.Boolean_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_statement([NotNull] ProbSQLParser.Select_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.select_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_statement([NotNull] ProbSQLParser.Select_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.select_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_expression([NotNull] ProbSQLParser.Select_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.select_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_expression([NotNull] ProbSQLParser.Select_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.compare_value_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompare_value_operator([NotNull] ProbSQLParser.Compare_value_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.compare_value_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompare_value_operator([NotNull] ProbSQLParser.Compare_value_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.literal_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_value([NotNull] ProbSQLParser.Literal_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.literal_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_value([NotNull] ProbSQLParser.Literal_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.expression_connector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_connector([NotNull] ProbSQLParser.Expression_connectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.expression_connector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_connector([NotNull] ProbSQLParser.Expression_connectorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.attribute_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_name([NotNull] ProbSQLParser.Attribute_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.attribute_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_name([NotNull] ProbSQLParser.Attribute_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] ProbSQLParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] ProbSQLParser.AttributeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.selection_condition_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelection_condition_atom([NotNull] ProbSQLParser.Selection_condition_atomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.selection_condition_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelection_condition_atom([NotNull] ProbSQLParser.Selection_condition_atomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.bit_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBit_literal([NotNull] ProbSQLParser.Bit_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.bit_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBit_literal([NotNull] ProbSQLParser.Bit_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.expression_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_atom([NotNull] ProbSQLParser.Expression_atomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.expression_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_atom([NotNull] ProbSQLParser.Expression_atomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit([NotNull] ProbSQLParser.InitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit([NotNull] ProbSQLParser.InitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.relation_connector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelation_connector([NotNull] ProbSQLParser.Relation_connectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.relation_connector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelation_connector([NotNull] ProbSQLParser.Relation_connectorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ProbSQLParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ProbSQLParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.join_relation_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_relation_list([NotNull] ProbSQLParser.Join_relation_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.join_relation_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_relation_list([NotNull] ProbSQLParser.Join_relation_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.join_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_operator([NotNull] ProbSQLParser.Join_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.join_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_operator([NotNull] ProbSQLParser.Join_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.hex_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHex_literal([NotNull] ProbSQLParser.Hex_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.hex_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHex_literal([NotNull] ProbSQLParser.Hex_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.scheme_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScheme_name([NotNull] ProbSQLParser.Scheme_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.scheme_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScheme_name([NotNull] ProbSQLParser.Scheme_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.string_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_literal([NotNull] ProbSQLParser.String_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.string_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_literal([NotNull] ProbSQLParser.String_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.selection_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelection_condition([NotNull] ProbSQLParser.Selection_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.selection_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelection_condition([NotNull] ProbSQLParser.Selection_conditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.attribute_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_list([NotNull] ProbSQLParser.Attribute_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.attribute_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_list([NotNull] ProbSQLParser.Attribute_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.condition_connector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition_connector([NotNull] ProbSQLParser.Condition_connectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.condition_connector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition_connector([NotNull] ProbSQLParser.Condition_connectorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.number_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber_literal([NotNull] ProbSQLParser.Number_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.number_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber_literal([NotNull] ProbSQLParser.Number_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.probabilistic_interval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProbabilistic_interval([NotNull] ProbSQLParser.Probabilistic_intervalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.probabilistic_interval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProbabilistic_interval([NotNull] ProbSQLParser.Probabilistic_intervalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.relation_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelation_name([NotNull] ProbSQLParser.Relation_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.relation_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelation_name([NotNull] ProbSQLParser.Relation_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="ProbSQLParser.compare_attribute_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompare_attribute_operator([NotNull] ProbSQLParser.Compare_attribute_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProbSQLParser.compare_attribute_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompare_attribute_operator([NotNull] ProbSQLParser.Compare_attribute_operatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace PRDB_Visual_Management.ProbSQLCompiler
